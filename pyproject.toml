[build-system]
requires      = ["hatchling"]
build-backend = "hatchling.build"

[project]
name            = "ML-homework"
description     = "homework repo for ml"
readme          = "README.md"
requires-python = ">=3.10"
license         = { file = "LICENSE" }
authors         = [{ name = "A.J.Zeller", email = "hello@atticux.me" }]
maintainers     = [{ name = "A.J.Zeller", email = "hello@atticux.me" }]

dynamic = ["version"] # https://hatch.pypa.io/latest/config/metadata/#version
dependencies = [
    "matplotlib>=3.10.6",
    "numpy>=2.2.6",
    "pandas>=2.3.3",
    "scikit-learn>=1.7.2",
    "seaborn>=0.13.2",
]

[project.urls]
Homepage      = "https://github.com/aittcuszz/ML-homework"
Issues        = "https://github.com/atticuszeller/ML-homework/issues"
documentation = "https://atticuszeller.github.io/ML-homework/"
Changelog     = "https://github.com/atticuszeller/ML-homework/blob/main/CHANGELOG.md"

[project.optional-dependencies]
# optional deps for package installation

[dependency-groups]
dev = [
    "ruff>=0.6.3",
    "mypy>=1.11.2",
    "pre-commit>=3.8.0",
    "pytest>=8.3.2",
    "pytest-sugar>=1.0.0",
    "coverage>=7.6.1",
]
ipy = [
    "ipykernel>=6.30.1",
]

[tool.hatch.version]
path = "src/ml_homework/__init__.py"
# FROM: https://hatch.pypa.io/latest/version/

[tool.hatch.build.targets.wheel]
packages = ["src/ml_homework"]
# FROM: https://hatch.pypa.io/latest/build/

## Test
[tool.mypy]
strict  = true
exclude = ["venv", ".venv"]

[tool.pytest.ini_options]
# Set additional command line options for pytest
# Ref: https://docs.pytest.org/en/stable/reference/reference.html#command-line-flags
addopts        = "-rXs --strict-config --strict-markers --tb=short"
xfail_strict   = true                                               # Treat tests that are marked as xfail but pass as test failures
filterwarnings = ["error"]                                          # Treat all warnings as errors
pythonpath     = "src/ml_homework/"

[tool.coverage.run]
branch = true

[tool.coverage.report]
skip_covered = true
show_missing = true
precision = 2
exclude_lines = [
    'def __repr__',
    'pragma= no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING=',
    'if typing.TYPE_CHECKING=',
    '@overload',
    '@typing.overload',
    '\(Protocol\)=$',
    'typing.assert_never',
    'assert_never',
    'if __name__ == .__main__.=',
]

## Linter and formatter
[tool.ruff]
# cover and extend the default config in https=//docs.astral.sh/ruff/configuration/
extend-exclude = [""]
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions
]

isort = { combine-as-imports = true, split-on-trailing-comma = false }

# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

[tool.ruff.format]
docstring-code-format     = true
skip-magic-trailing-comma = true

# Reference
# 1. https=//github.com/Kludex/python-template/blob/main/template/%7B%7B%20project_slug%20%7D%7D/pyproject.toml.jinja
# 2. https=//github.com/fastapi/full-stack-fastapi-template/blob/master/backend/pyproject.toml
# 3. https=//github.com/pydantic/logfire
# 4. https=//coverage.readthedocs.io/en/latest/index.html
